server:
  port: 0

cors:
  allowed-origins: "http://localhost:3000,http://localhost:5173"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"

spring:

  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop

  # 마이그레이션은 테스트에서 끔 (JPA가 테이블 만들어줌)
  flyway:
    enabled: false

  security:
    login-limit:
      # 계정 기준 윈도/임계치/락
      account-window-seconds: 300       # 최소 60
      account-soft-threshold: 5         # 최소 1
      account-hard-threshold: 10        # 최소 1
      account-soft-lock-seconds: 300    # 최소 60
      account-hard-lock-seconds: 600    # 최소 60

      # IP 기준 윈도/임계치/쿨다운
      ip-window-seconds: 300            # 최소 60
      ip-threshold: 20                  # 최소 1
      ip-cooldown-seconds: 300          # 최소 60

  # 테스트에서 Redis 자동구성 막기 (없어서 실패 방지)
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration
      - org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration

# 보통 실패 원인 1위: JWT 시크릿/TTL 미설정
  jwt:
    secret: "abcdefghijklmnopqrstuvwxyz012345"     # HS256용 32+자
    refresh:
      secret: "abcdefghijklmnopqrstuvwxyz0123456789_refresh_key"
    access-ttl: "PT5M"
    refresh-ttl: "PT1H"

  # 메일/OAuth를 쓰는 빈이 초기화될 경우 대비 더미 값
  mail:
    host: localhost
    port: 2525
